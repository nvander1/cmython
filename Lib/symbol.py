#! /usr/bin/env python3

"""Non-terminal symbols of Python grammar (from "graminit.h")."""

#  This file is automatically generated; please don't muck it up!
#
#  To update the symbols in this file, 'cd' to the top directory of
#  the python source tree after building the interpreter and run:
#
#    ./python Lib/symbol.py

#--start constants--
single_input = 256
file_input = 257
eval_input = 258
decorator = 259
decorators = 260
decorated = 261
async_funcdef = 262
funcdef = 263
parameters = 264
typedargslist = 265
tfpdef = 266
varargslist = 267
vfpdef = 268
stmt = 269
simple_stmt = 270
small_stmt = 271
expr_stmt = 272
annassign = 273
testlist_star_expr = 274
augassign = 275
del_stmt = 276
pass_stmt = 277
flow_stmt = 278
break_stmt = 279
continue_stmt = 280
return_stmt = 281
yield_stmt = 282
raise_stmt = 283
import_stmt = 284
import_name = 285
import_from = 286
import_as_name = 287
dotted_as_name = 288
import_as_names = 289
dotted_as_names = 290
dotted_name = 291
global_stmt = 292
nonlocal_stmt = 293
assert_stmt = 294
compound_stmt = 295
async_stmt = 296
if_stmt = 297
switch_stmt = 298
switch_body = 299
while_stmt = 300
until_stmt = 301
for_stmt = 302
try_stmt = 303
with_stmt = 304
with_item = 305
except_clause = 306
suite = 307
test = 308
test_nocond = 309
lambdef = 310
lambdef_nocond = 311
or_test = 312
and_test = 313
not_test = 314
comparison = 315
comp_op = 316
star_expr = 317
expr = 318
xor_expr = 319
and_expr = 320
shift_expr = 321
arith_expr = 322
term = 323
factor = 324
power = 325
atom_expr = 326
atom = 327
testlist_comp = 328
trailer = 329
subscriptlist = 330
subscript = 331
sliceop = 332
exprlist = 333
testlist = 334
dictorsetmaker = 335
classdef = 336
arglist = 337
argument = 338
comp_iter = 339
sync_comp_for = 340
comp_for = 341
comp_if = 342
encoding_decl = 343
yield_expr = 344
yield_arg = 345
#--end constants--

sym_name = {}
for _name, _value in list(globals().items()):
    if type(_value) is type(0):
        sym_name[_value] = _name


def _main():
    import sys
    import token
    if len(sys.argv) == 1:
        sys.argv = sys.argv + ["Include/graminit.h", "Lib/symbol.py"]
    token._main()

if __name__ == "__main__":
    _main()
